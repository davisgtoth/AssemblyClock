0000              1   ;------------------------------------------------------------------------------
0000              2   ; Filename: clock.asm
0000              3   ; Author: Davis Toth
0000              4   ; Date: 2024-09-07
0000              5   ; Description: This assembly program is designed to implement a digital clock
0000              6   ;              on the Terasic DE0-CV FPGA board. The clock supports both 24-hour
0000              7   ;              and 12-hour time formats and can display the date on the 6 buit-in
0000              8   ;              7-segment displays. The time and date can be set using the switches
0000              9   ;              and buttons on the board. The clock also has a features to blank the
0000             10   ;              displays and hide the seconds. The program uses several subroutines
0000             11   ;              to handle timekeeping, datekeeping, display, and setting the time/date.
0000             12   ;              This file contains the main program loop for both normal operation
0000             13   ;              and setting the time/date.
0000             14   ;------------------------------------------------------------------------------
                 -1   $MODDE0CV 
0000              1   ;  MODDDE2: Register definition for DE2-8052 softcore
0000              2   ;
0000              3   ;   Copyright (C) 2011  Jesus Calvino-Fraga, jesusc at ece.ubc.ca
0000              4   ;
0000              5   ;   This library is free software; you can redistribute it and/or
0000              6   ;   modify it under the terms of the GNU Lesser General Public
0000              7   ;   License as published by the Free Software Foundation; either
0000              8   ;   version 2.1 of the License, or (at your option) any later version.
0000              9   ;
0000             10   ;   This library is distributed in the hope that it will be useful,
0000             11   ;   but WITHOUT ANY WARRANTY; without even the implied warranty of
0000             12   ;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
0000             13   ;   Lesser General Public License for more details.
0000             14   ;
0000             15   ;   You should have received a copy of the GNU Lesser General Public
0000             16   ;   License along with this library; if not, write to the Free Software
0000             17   ;   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
0000             18   ;
0000             19       
0000             20   P0     DATA  080H  ;PORT 0
0000             21   SP     DATA  081H  ;STACK POINTER
0000             22   DPL    DATA  082H  ;DATA POINTER 0 - LOW BYTE
0000             23   DPH    DATA  083H  ;DATA POINTER 0 - HIGH BYTE
0000             24   DPL1   DATA  084H  ;DATA POINTER 1 - LOW BYTE
0000             25   DPH1   DATA  085H  ;DATA POINTER 1 - HIGH BYTE
0000             26   DPS    DATA  086H  ;DATA POINTER SELECT. DPH1, DPL1 active when DPS.0=1
0000             27   PCON   DATA  087H  ;POWER CONTROL
0000             28   TCON   DATA  088H  ;TIMER CONTROL
0000             29   TMOD   DATA  089H  ;TIMER MODE
0000             30   TL0    DATA  08AH  ;TIMER 0 - LOW BYTE
0000             31   TL1    DATA  08BH  ;TIMER 1 - LOW BYTE
0000             32   TH0    DATA  08CH  ;TIMER 0 - HIGH BYTE
0000             33   TH1    DATA  08DH  ;TIMER 1 - HIGH BYTE
0000             34   P1     DATA  090H  ;PORT 1
0000             35   SCON   DATA  098H  ;SERIAL PORT CONTROL
0000             36   SBUF   DATA  099H  ;SERIAL PORT BUFFER
0000             37   P2     DATA  0A0H  ;PORT 2
0000             38   IE     DATA  0A8H  ;INTERRUPT ENABLE
0000             39   P3     DATA  0B0H  ;PORT 3
0000             40   IP     DATA  0B8H  ;INTERRUPT PRIORITY
0000             41   T2CON  DATA  0C8H  ;TIMER 2 CONTROL
0000             42   T2MOD  DATA  0C9H  ;TIMER 2 MODE
0000             43   RCAP2L DATA  0CAH  ;TIMER 2 CAPTURE REGISTER - LOW BYTE
0000             44   RCAP2H DATA  0CBH  ;TIMER 2 CAPTURE REGISTER - HIGH BYTE
0000             45   TL2    DATA  0CCH  ;TIMER 2 - LOW BYTE
0000             46   TH2    DATA  0CDH  ;TIMER 2 - HIGH BYTE
0000             47   PSW    DATA  0D0H  ;PROGRAM STATUS WORD
0000             48   ACC    DATA  0E0H  ;ACCUMULATOR
0000             49   B      DATA  0F0H  ;MULTIPLICATION REGISTER
0000             50   IT0    BIT   088H  ;TCON.0 - EXT. INTERRUPT 0 TYPE
0000             51   IE0    BIT   089H  ;TCON.1 - EXT. INTERRUPT 0 EDGE FLAG
0000             52   IT1    BIT   08AH  ;TCON.2 - EXT. INTERRUPT 1 TYPE
0000             53   IE1    BIT   08BH  ;TCON.3 - EXT. INTERRUPT 1 EDGE FLAG
0000             54   TR0    BIT   08CH  ;TCON.4 - TIMER 0 ON/OFF CONTROL
0000             55   TF0    BIT   08DH  ;TCON.5 - TIMER 0 OVERFLOW FLAG
0000             56   TR1    BIT   08EH  ;TCON.6 - TIMER 1 ON/OFF CONTROL
0000             57   TF1    BIT   08FH  ;TCON.7 - TIMER 1 OVERFLOW FLAG
0000             58   RI     BIT   098H  ;SCON.0 - RECEIVE INTERRUPT FLAG
0000             59   TI     BIT   099H  ;SCON.1 - TRANSMIT INTERRUPT FLAG
0000             60   RB8    BIT   09AH  ;SCON.2 - RECEIVE BIT 8
0000             61   TB8    BIT   09BH  ;SCON.3 - TRANSMIT BIT 8
0000             62   REN    BIT   09CH  ;SCON.4 - RECEIVE ENABLE
0000             63   SM2    BIT   09DH  ;SCON.5 - SERIAL MODE CONTROL BIT 2
0000             64   SM1    BIT   09EH  ;SCON.6 - SERIAL MODE CONTROL BIT 1
0000             65   SM0    BIT   09FH  ;SCON.7 - SERIAL MODE CONTROL BIT 0
0000             66   EX0    BIT   0A8H  ;IE.0 - EXTERNAL INTERRUPT 0 ENABLE
0000             67   ET0    BIT   0A9H  ;IE.1 - TIMER 0 INTERRUPT ENABLE
0000             68   EX1    BIT   0AAH  ;IE.2 - EXTERNAL INTERRUPT 1 ENABLE
0000             69   ET1    BIT   0ABH  ;IE.3 - TIMER 1 INTERRUPT ENABLE
0000             70   ES     BIT   0ACH  ;IE.4 - SERIAL PORT INTERRUPT ENABLE
0000             71   ET2    BIT   0ADH  ;IE.5 - TIMER 2 INTERRUPT ENABLE
0000             72   EA     BIT   0AFH  ;IE.7 - GLOBAL INTERRUPT ENABLE
0000             73   RXD    BIT   0B0H  ;P3.0 - SERIAL PORT RECEIVE INPUT
0000             74   TXD    BIT   0B1H  ;P3.1 - SERIAL PORT TRANSMIT OUTPUT
0000             75   INT0   BIT   0B2H  ;P3.2 - EXTERNAL INTERRUPT 0 INPUT
0000             76   INT1   BIT   0B3H  ;P3.3 - EXTERNAL INTERRUPT 1 INPUT
0000             77   T0     BIT   0B4H  ;P3.4 - TIMER 0 COUNT INPUT
0000             78   T1     BIT   0B5H  ;P3.5 - TIMER 1 COUNT INPUT
0000             79   WR     BIT   0B6H  ;P3.6 - WRITE CONTROL FOR EXT. MEMORY
0000             80   RD     BIT   0B7H  ;P3.7 - READ CONTROL FOR EXT. MEMORY
0000             81   PX0    BIT   0B8H  ;IP.0 - EXTERNAL INTERRUPT 0 PRIORITY
0000             82   PT0    BIT   0B9H  ;IP.1 - TIMER 0 PRIORITY
0000             83   PX1    BIT   0BAH  ;IP.2 - EXTERNAL INTERRUPT 1 PRIORITY
0000             84   PT1    BIT   0BBH  ;IP.3 - TIMER 1 PRIORITY
0000             85   PS     BIT   0BCH  ;IP.4 - SERIAL PORT PRIORITY
0000             86   PT2    BIT   0BDH  ;IP.5 - TIMER 2 PRIORITY
0000             87   CAP2   BIT   0C8H  ;T2CON.0 - CAPTURE OR RELOAD SELECT
0000             88   CNT2   BIT   0C9H  ;T2CON.1 - TIMER OR COUNTER SELECT
0000             89   TR2    BIT   0CAH  ;T2CON.2 - TIMER 2 ON/OFF CONTROL
0000             90   EXEN2  BIT   0CBH  ;T2CON.3 - TIMER 2 EXTERNAL ENABLE FLAG
0000             91   TCLK   BIT   0CCH  ;T2CON.4 - TRANSMIT CLOCK SELECT
0000             92   RCLK   BIT   0CDH  ;T2CON.5 - RECEIVE CLOCK SELECTT
0000             93   EXF2   BIT   0CEH  ;T2CON.6 - EXTERNAL TRANSITION FLAG
0000             94   TF2    BIT   0CFH  ;T2CON.7 - TIMER 2 OVERFLOW FLAG
0000             95   P      BIT   0D0H  ;PSW.0 - ACCUMULATOR PARITY FLAG
0000             96   OV     BIT   0D2H  ;PSW.2 - OVERFLOW FLAG
0000             97   RS0    BIT   0D3H  ;PSW.3 - REGISTER BANK SELECT 0
0000             98   RS1    BIT   0D4H  ;PSW.4 - REGISTER BANK SELECT 1
0000             99   F0     BIT   0D5H  ;PSW.5 - FLAG 0
0000            100   AC     BIT   0D6H  ;PSW.6 - AUXILIARY CARRY FLAG
0000            101   CY     BIT   0D7H  ;PSW.7 - CARRY FLAG
0000            102   
0000            103   ; For the altera DE2 configured with an 8051/8052 softcore processor
0000            104   ; we have the following extra registers:
0000            105   
0000            106   HEX0   DATA  091H ; Zero turns the segment on
0000            107   HEX1   DATA  092H ; 
0000            108   HEX2   DATA  093H ; 
0000            109   HEX3   DATA  094H ; 
0000            110   HEX4   DATA  08EH ;
0000            111   HEX5   DATA  08FH ;
0000            112   HEX6   DATA  096H ;
0000            113   HEX7   DATA  097H ;
0000            114   
0000            115   P0MOD  DATA  09AH ; Input/output mode bits for port 0.  '1' sets the port to output mode.
0000            116   P1MOD  DATA  09BH ; Input/output mode bits for port 1
0000            117   P2MOD  DATA  09CH ; Input/output mode bits for port 2
0000            118   P3MOD  DATA  09DH ; Input/output mode bits for port 3
0000            119   
0000            120   LEDRA  DATA  0E8H ; LEDs LEDR0 to LEDR7 (bit addressable, ex: LEDRA.1 for LEDR1)
0000            121   LEDRB  DATA  095H ; LEDs LEDR8 to LEDR15
0000            122   LEDRC  DATA  09EH ; LEDs LEDR16, LEDR15, and LEDG8
0000            123   LEDG   DATA  0F8H ; LEDs LEDG0 to LEDG7 (bit addressable, ex: LEDG.3 for LEDG3)
0000            124   SWA    DATA  0E8H ; Switches SW0 to SW7 (bit addressable, ex: SWA.1 for SW1)
0000            125   SWB    DATA  095H ; Switches SW8 to SW15
0000            126   SWC    DATA  09EH ; Switches SW16 and SW17
0000            127   KEY    DATA  0F8H ; KEY1=KEY.1, KEY2=KEY.2, KEY3=KEY.3.  KEY0 is the reset button! 
0000            128   
0000            129   LCD_CMD   DATA 0D8H ;
0000            130   LCD_DATA  DATA 0D9H ;
0000            131   LCD_MOD   DATA 0DAH ; Write 0xff to make LCD_DATA an output
0000            132   LCD_RW    BIT  0D8H ; '0' writes to LCD
0000            133   LCD_EN    BIT  0D9H ; Toggle from '1' to '0'
0000            134   LCD_RS    BIT  0DAH ; '0' for commands, '1' for data
0000            135   LCD_ON    BIT  0DBH ; Write '1' to power the LCD
0000            136   LCD_BLON  BIT  0DCH ; Write '1' to turn on back light
0000            137   
0000            138   FLASH_CMD  data 0DBH ; The control bits of the flash memory:
0000            139   ; bit 0: FL_RST_N  Set to 1 for normal operation
0000            140   ; bit 1: FL_WE_N
0000            141   ; bit 2: FL_OE_N
0000            142   ; bit 3: FL_CE_N
0000            143   FLASH_DATA data 0DCH ; 8-bit data bus of flash memory.
0000            144   FLASH_MOD  data 0DDH ; 0xff makes FLASH_DATA output.  0x00 makes FLASH_DATA input.
0000            145   FLASH_ADD0 data 0E1H ; address bits 0 to 7.
0000            146   FLASH_ADD1 data 0E2H ; address bits 8 to 15.
0000            147   FLASH_ADD2 data 0E3H ; address bits 16 to 21.
0000            148   
0000             16   
0000             17   org 0000H
0000 0203D7      18       ljmp init
0003             19   
0003             20   ;------------------------------------------------------------------------------
0003             21   ; Data Section: Variables, flags, and BCD to 7-segment lookup table
0003             22   ;------------------------------------------------------------------------------
0003             23   
0003             24   ; variables to store time and date
0030             25   dseg at 30h
0030             26   time:           ds 3 ; stored in BCD in 24-hour format, LSD to MSD: seconds, minutes, hours
0033             27   date:           ds 3 ; stored in BCD, LSD to MSD: day, month, year 
0036             28   twelve_hour:    ds 1 ; stores the hour in 12 hour format
0037             29   num_days:       ds 1 ; number of days in the current month + 1 to compare for overflow
0038             30   
0038             31   ; flags for various uses
0000             32   bseg
0000             33   twelve:         dbit 1 ; when set, displays time in 12-hour format
0001             34   hide_sec:       dbit 1 ; when set, doesn't display seconds - blanks HEX0 and HEX1 if in 24-hour mode, shows AM/PM if in 12-hour mode
0002             35   pm_flag:        dbit 1 ; flag to indicate PM when in 12-hour mode
0003             36   disp_date:      dbit 1 ; when set, displays the date instead of the time in the form MM/DD/YY
0004             37   blank:          dbit 1 ; when set, blanks the hex displays
0005             38   enter_set:      dbit 1 ; flag used to enter the set mode
0006             39   flash_flag:     dbit 1 ; flag used to flash the hex displays when setting the time/date
0007             40   dec_flag:       dbit 1 ; flag used to decrement the digit when setting the time/date
0008             41   
0008             42   ; subroutine files included
                 -1   $include(subroutines/time.asm)
0008              1   ;------------------------------------------------------------------------------
0008              2   ; Filename: time.asm
0008              3   ; Author: Davis Toth
0008              4   ; Date: 2024-09-07
0008              5   ; Description: This file contains subroutines related to timekeeping of the 
0008              6   ;              clock, including a delay subroutine used to keep track of time 
0008              7   ;              and a subroutine to increment the time.
0008              8   ;------------------------------------------------------------------------------
0078             97   $LIST
                 -1   $include(subroutines/date.asm)
0078              1   ;------------------------------------------------------------------------------
0078              2   ; Filename: date.asm
0078              3   ; Author: Davis Toth
0078              4   ; Date: 2024-08-24
0078              5   ; Description: This file contains subroutines related to datekeeping of the
0078              6   ;              clock, including a subroutine that sets a variable containing
0078              7   ;              the number of days in the current month, a subroutine that
0078              8   ;              increments the date, and a subroutine that ensures the current
0078              9   ;              date is valid given what the month is.
0078             10   ;------------------------------------------------------------------------------
00FC            112   $LIST
                 -1   $include(subroutines/display.asm)
00FC              1   ;------------------------------------------------------------------------------
00FC              2   ; Filename: display.asm
00FC              3   ; Author: Davis Toth
00FC              4   ; Date: 2024-09-07
00FC              5   ; Description: This file contains subroutines and macros related to displaying 
00FC              6   ;              the time and date on the 7-segment displays. This includes a 
00FC              7   ;              macro that displays a BCD number, a subroutine that displays the
00FC              8   ;              time/date in various formats, and a subroutine that displays the
00FC              9   ;              time/date when in set mode.
00FC             10   ;------------------------------------------------------------------------------
0313            172   $LIST
                 -1   $include(subroutines/set_mode.asm)
0313              1   ;------------------------------------------------------------------------------
0313              2   ; Filename: set_mode.asm
0313              3   ; Author: Davis Toth
0313              4   ; Date: 2024-08-24
0313              5   ; Description: This file contains the subroutines related to setting the time
0313              6   ;              and date on the clock. This includes a subroutine that increments
0313              7   ;              or decrements the time/date and a subroutine that checks if the
0313              8   ;              clock has entered into set mode.
0313              9   ;------------------------------------------------------------------------------
03CD            148   $LIST
03CD             47   
03CD             48   ; Look-up table for 7-seg displays
03CD             49   ; note: segments turn on with logic 0
03CD             50   cseg
03CD             51   myLUT: ; Look-up table for 7-seg displays
03CD C0F9A4B0    52       DB 0C0H, 0F9H, 0A4H, 0B0H, 099H        ; 0 TO 4
     99
03D2 9282F880    53       DB 092H, 082H, 0F8H, 080H, 090H        ; 4 TO 9
     90
03D7             54   
03D7             55   ;------------------------------------------------------------------------------
03D7             56   ; Main Program
03D7             57   ;------------------------------------------------------------------------------
03D7             58   
03D7             59   ; Initialization
03D7             60   init:
03D7 75817F      61       mov sp, #07FH ; set stack pointer
03DA 758901      62       mov TMOD, #00000001B ; set timer 0 to mode 1
03DD E4          63       clr a
03DE F5E8        64            mov LEDRA, a ; clear LEDs
03E0 F595        65            mov LEDRB, a
03E2 F8          66       mov R0, a ; register 0 used to count 10ms delays
03E3 F530        67       mov time+0, a ; initialize the time to 00:00:00
03E5 F531        68       mov time+1, a
03E7 F532        69       mov time+2, a
03E9 753301      70       mov date+0, #01H ; initialize the date to 01/01/00
03EC 753401      71       mov date+1, #01H
03EF 753524      72       mov date+2, #24H
03F2 120078      73       lcall set_num_days ; initialize num_days
03F5 120047      74       lcall set_twelve_hour ; initialize twelve_hour and pm_flag
03F8 C200        75       clr twelve ; clear all flags
03FA C201        76       clr hide_sec
03FC C203        77       clr disp_date
03FE C204        78       clr blank 
0400 C205        79       clr enter_set
0402 C206        80       clr flash_flag
0404 C207        81       clr dec_flag
0406 8000        82       sjmp main
0408             83   
0408             84   ; Main loop - counts and displays time, checks for inputs from buttons modifying flags accordingly
0408             85   ; Notes:
0408             86   ;   - R0 used to count 10ms delays
0408             87   ;   - R4 used to count 10ms delays for displaying date for 2 seconds
0408             88   ;   - KEY3 = 12/24 hour format, KEY2 = hide seconds/show AM/PM, KEY1 = display date, KEY0 = blank the 7-seg displays
0408             89   ;   - enters set mode from enter_set flag, i.e. if either switch 0 or 1 is flipped
0408             90   main:
0408 120003      91       lcall wait10ms
040B             92   check_set:
040B 120313      93       lcall check_enter_set
040E 200539      94       jb enter_set, set_mode
0411             95   check_twelve:
0411 20FB05      96       jb KEY.3, check_hide_sec
0414 30FBFD      97       jnb KEY.3, $
0417 B200        98       cpl twelve
0419             99   check_hide_sec:
0419 20FA05     100       jb KEY.2, check_disp_date
041C 30FAFD     101       jnb KEY.2, $
041F B201       102       cpl hide_sec
0421            103   check_disp_date:
0421 20F907     104       jb KEY.1, check_blank
0424 30F9FD     105       jnb KEY.1, $
0427 D203       106       setb disp_date
0429 7C00       107       mov R4, #0
042B            108   check_blank:
042B 20F805     109       jb KEY.0, main_continue
042E 30F8FD     110       jnb KEY.0, $
0431 B204       111       cpl blank
0433            112   main_continue:
0433 300306     113       jnb disp_date, main_no_date
0436 0C         114       inc R4
0437 BCC802     115       cjne R4, #200, main_no_date ; 200 * 10ms = 2 seconds
043A C203       116       clr disp_date
043C            117   main_no_date:
043C 1200FC     118       lcall display
043F 08         119       inc R0
0440 B864C5     120       cjne R0, #100, main ; 100 * 10ms = 1 second
0443 120013     121       lcall incTime
0446 7800       122       mov R0, #0
0448 80BE       123       sjmp main
044A            124   
044A            125   ; Set mode - allows the user to set the time and date
044A            126   ; Notes:
044A            127   ;   - R0 is used to count 10ms delays, 
044A            128   ;   - R1 is used to determine which digit is currently selected to be set
044A            129   ;       - 0 = sec/year (HEX0 and HEX1)
044A            130   ;       - 1 = min/day (HEX2 and HEX3)
044A            131   ;       - 2 = hr/month (HEX4 and HEX5)
044A            132   ;       - all other values undefined 
044A            133   ;   - KEY3 = move left, KEY2 = increment, KEY1 = decrement, KEY0 = move right
044A            134   ;   - returns to main if enter_set flag is cleared, i.e. both switches 0 and 1 are off
044A            135   set_mode:
044A 7800       136       mov R0, #0 
044C 7900       137       mov R1, #0 ; initialize selected digit to sec/year
044E C203       138       clr disp_date ; if enters set mode while displaying date, will stop and flash time/date
0450 D206       139       setb flash_flag ; starts by having sec/year off 
0452            140   set_mode_loop:
0452 120003     141       lcall wait10ms
0455            142   check_left:
0455 20FB09     143       jb KEY.3, check_right
0458 30FBFD     144       jnb KEY.3, $
045B 09         145       inc R1
045C B90302     146       cjne R1, #3, check_right
045F 7900       147       mov R1, #0
0461            148   check_right:
0461 20F809     149       jb KEY.0, check_inc
0464 30F8FD     150       jnb KEY.0, $
0467 19         151       dec R1
0468 B9FF02     152       cjne R1, #0FFH, check_inc
046B 7902       153       mov R1, #2
046D            154   check_inc:
046D 20FA0B     155       jb KEY.2, check_dec
0470 30FAFD     156       jnb KEY.2, $
0473 C207       157       clr dec_flag
0475 12031F     158       lcall adjust_digit
0478 120078     159       lcall set_num_days ; update num_days in case month was changed to not display invalid date
047B            160   check_dec:
047B 20F90B     161       jb KEY.1, set_mode_continue
047E 30F9FD     162       jnb KEY.1, $
0481 D207       163       setb dec_flag
0483 12031F     164       lcall adjust_digit
0486 120078     165       lcall set_num_days ; update num_days in case month was changed to not display invalid date
0489            166   set_mode_continue:
0489 1201C0     167       lcall display_set
048C 08         168       inc R0
048D 120313     169       lcall check_enter_set
0490 300509     170       jnb enter_set, set_mode_exit
0493 B828BC     171       cjne R0, #40, set_mode_loop
0496 B206       172       cpl flash_flag
0498 7800       173       mov R0, #0
049A 80B6       174       sjmp set_mode_loop
049C            175   set_mode_exit:
049C 120047     176       lcall set_twelve_hour ; update twelve_hour and pm_flag
049F 020408     177       ljmp main
04A2            178   EN
