                 -1   $MODDE0CV 
0000              1   ;  MODDDE2: Register definition for DE2-8052 softcore
0000              2   ;
0000              3   ;   Copyright (C) 2011  Jesus Calvino-Fraga, jesusc at ece.ubc.ca
0000              4   ;
0000              5   ;   This library is free software; you can redistribute it and/or
0000              6   ;   modify it under the terms of the GNU Lesser General Public
0000              7   ;   License as published by the Free Software Foundation; either
0000              8   ;   version 2.1 of the License, or (at your option) any later version.
0000              9   ;
0000             10   ;   This library is distributed in the hope that it will be useful,
0000             11   ;   but WITHOUT ANY WARRANTY; without even the implied warranty of
0000             12   ;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
0000             13   ;   Lesser General Public License for more details.
0000             14   ;
0000             15   ;   You should have received a copy of the GNU Lesser General Public
0000             16   ;   License along with this library; if not, write to the Free Software
0000             17   ;   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
0000             18   ;
0000             19       
0000             20   P0     DATA  080H  ;PORT 0
0000             21   SP     DATA  081H  ;STACK POINTER
0000             22   DPL    DATA  082H  ;DATA POINTER 0 - LOW BYTE
0000             23   DPH    DATA  083H  ;DATA POINTER 0 - HIGH BYTE
0000             24   DPL1   DATA  084H  ;DATA POINTER 1 - LOW BYTE
0000             25   DPH1   DATA  085H  ;DATA POINTER 1 - HIGH BYTE
0000             26   DPS    DATA  086H  ;DATA POINTER SELECT. DPH1, DPL1 active when DPS.0=1
0000             27   PCON   DATA  087H  ;POWER CONTROL
0000             28   TCON   DATA  088H  ;TIMER CONTROL
0000             29   TMOD   DATA  089H  ;TIMER MODE
0000             30   TL0    DATA  08AH  ;TIMER 0 - LOW BYTE
0000             31   TL1    DATA  08BH  ;TIMER 1 - LOW BYTE
0000             32   TH0    DATA  08CH  ;TIMER 0 - HIGH BYTE
0000             33   TH1    DATA  08DH  ;TIMER 1 - HIGH BYTE
0000             34   P1     DATA  090H  ;PORT 1
0000             35   SCON   DATA  098H  ;SERIAL PORT CONTROL
0000             36   SBUF   DATA  099H  ;SERIAL PORT BUFFER
0000             37   P2     DATA  0A0H  ;PORT 2
0000             38   IE     DATA  0A8H  ;INTERRUPT ENABLE
0000             39   P3     DATA  0B0H  ;PORT 3
0000             40   IP     DATA  0B8H  ;INTERRUPT PRIORITY
0000             41   T2CON  DATA  0C8H  ;TIMER 2 CONTROL
0000             42   T2MOD  DATA  0C9H  ;TIMER 2 MODE
0000             43   RCAP2L DATA  0CAH  ;TIMER 2 CAPTURE REGISTER - LOW BYTE
0000             44   RCAP2H DATA  0CBH  ;TIMER 2 CAPTURE REGISTER - HIGH BYTE
0000             45   TL2    DATA  0CCH  ;TIMER 2 - LOW BYTE
0000             46   TH2    DATA  0CDH  ;TIMER 2 - HIGH BYTE
0000             47   PSW    DATA  0D0H  ;PROGRAM STATUS WORD
0000             48   ACC    DATA  0E0H  ;ACCUMULATOR
0000             49   B      DATA  0F0H  ;MULTIPLICATION REGISTER
0000             50   IT0    BIT   088H  ;TCON.0 - EXT. INTERRUPT 0 TYPE
0000             51   IE0    BIT   089H  ;TCON.1 - EXT. INTERRUPT 0 EDGE FLAG
0000             52   IT1    BIT   08AH  ;TCON.2 - EXT. INTERRUPT 1 TYPE
0000             53   IE1    BIT   08BH  ;TCON.3 - EXT. INTERRUPT 1 EDGE FLAG
0000             54   TR0    BIT   08CH  ;TCON.4 - TIMER 0 ON/OFF CONTROL
0000             55   TF0    BIT   08DH  ;TCON.5 - TIMER 0 OVERFLOW FLAG
0000             56   TR1    BIT   08EH  ;TCON.6 - TIMER 1 ON/OFF CONTROL
0000             57   TF1    BIT   08FH  ;TCON.7 - TIMER 1 OVERFLOW FLAG
0000             58   RI     BIT   098H  ;SCON.0 - RECEIVE INTERRUPT FLAG
0000             59   TI     BIT   099H  ;SCON.1 - TRANSMIT INTERRUPT FLAG
0000             60   RB8    BIT   09AH  ;SCON.2 - RECEIVE BIT 8
0000             61   TB8    BIT   09BH  ;SCON.3 - TRANSMIT BIT 8
0000             62   REN    BIT   09CH  ;SCON.4 - RECEIVE ENABLE
0000             63   SM2    BIT   09DH  ;SCON.5 - SERIAL MODE CONTROL BIT 2
0000             64   SM1    BIT   09EH  ;SCON.6 - SERIAL MODE CONTROL BIT 1
0000             65   SM0    BIT   09FH  ;SCON.7 - SERIAL MODE CONTROL BIT 0
0000             66   EX0    BIT   0A8H  ;IE.0 - EXTERNAL INTERRUPT 0 ENABLE
0000             67   ET0    BIT   0A9H  ;IE.1 - TIMER 0 INTERRUPT ENABLE
0000             68   EX1    BIT   0AAH  ;IE.2 - EXTERNAL INTERRUPT 1 ENABLE
0000             69   ET1    BIT   0ABH  ;IE.3 - TIMER 1 INTERRUPT ENABLE
0000             70   ES     BIT   0ACH  ;IE.4 - SERIAL PORT INTERRUPT ENABLE
0000             71   ET2    BIT   0ADH  ;IE.5 - TIMER 2 INTERRUPT ENABLE
0000             72   EA     BIT   0AFH  ;IE.7 - GLOBAL INTERRUPT ENABLE
0000             73   RXD    BIT   0B0H  ;P3.0 - SERIAL PORT RECEIVE INPUT
0000             74   TXD    BIT   0B1H  ;P3.1 - SERIAL PORT TRANSMIT OUTPUT
0000             75   INT0   BIT   0B2H  ;P3.2 - EXTERNAL INTERRUPT 0 INPUT
0000             76   INT1   BIT   0B3H  ;P3.3 - EXTERNAL INTERRUPT 1 INPUT
0000             77   T0     BIT   0B4H  ;P3.4 - TIMER 0 COUNT INPUT
0000             78   T1     BIT   0B5H  ;P3.5 - TIMER 1 COUNT INPUT
0000             79   WR     BIT   0B6H  ;P3.6 - WRITE CONTROL FOR EXT. MEMORY
0000             80   RD     BIT   0B7H  ;P3.7 - READ CONTROL FOR EXT. MEMORY
0000             81   PX0    BIT   0B8H  ;IP.0 - EXTERNAL INTERRUPT 0 PRIORITY
0000             82   PT0    BIT   0B9H  ;IP.1 - TIMER 0 PRIORITY
0000             83   PX1    BIT   0BAH  ;IP.2 - EXTERNAL INTERRUPT 1 PRIORITY
0000             84   PT1    BIT   0BBH  ;IP.3 - TIMER 1 PRIORITY
0000             85   PS     BIT   0BCH  ;IP.4 - SERIAL PORT PRIORITY
0000             86   PT2    BIT   0BDH  ;IP.5 - TIMER 2 PRIORITY
0000             87   CAP2   BIT   0C8H  ;T2CON.0 - CAPTURE OR RELOAD SELECT
0000             88   CNT2   BIT   0C9H  ;T2CON.1 - TIMER OR COUNTER SELECT
0000             89   TR2    BIT   0CAH  ;T2CON.2 - TIMER 2 ON/OFF CONTROL
0000             90   EXEN2  BIT   0CBH  ;T2CON.3 - TIMER 2 EXTERNAL ENABLE FLAG
0000             91   TCLK   BIT   0CCH  ;T2CON.4 - TRANSMIT CLOCK SELECT
0000             92   RCLK   BIT   0CDH  ;T2CON.5 - RECEIVE CLOCK SELECTT
0000             93   EXF2   BIT   0CEH  ;T2CON.6 - EXTERNAL TRANSITION FLAG
0000             94   TF2    BIT   0CFH  ;T2CON.7 - TIMER 2 OVERFLOW FLAG
0000             95   P      BIT   0D0H  ;PSW.0 - ACCUMULATOR PARITY FLAG
0000             96   OV     BIT   0D2H  ;PSW.2 - OVERFLOW FLAG
0000             97   RS0    BIT   0D3H  ;PSW.3 - REGISTER BANK SELECT 0
0000             98   RS1    BIT   0D4H  ;PSW.4 - REGISTER BANK SELECT 1
0000             99   F0     BIT   0D5H  ;PSW.5 - FLAG 0
0000            100   AC     BIT   0D6H  ;PSW.6 - AUXILIARY CARRY FLAG
0000            101   CY     BIT   0D7H  ;PSW.7 - CARRY FLAG
0000            102   
0000            103   ; For the altera DE2 configured with an 8051/8052 softcore processor
0000            104   ; we have the following extra registers:
0000            105   
0000            106   HEX0   DATA  091H ; Zero turns the segment on
0000            107   HEX1   DATA  092H ; 
0000            108   HEX2   DATA  093H ; 
0000            109   HEX3   DATA  094H ; 
0000            110   HEX4   DATA  08EH ;
0000            111   HEX5   DATA  08FH ;
0000            112   HEX6   DATA  096H ;
0000            113   HEX7   DATA  097H ;
0000            114   
0000            115   P0MOD  DATA  09AH ; Input/output mode bits for port 0.  '1' sets the port to output mode.
0000            116   P1MOD  DATA  09BH ; Input/output mode bits for port 1
0000            117   P2MOD  DATA  09CH ; Input/output mode bits for port 2
0000            118   P3MOD  DATA  09DH ; Input/output mode bits for port 3
0000            119   
0000            120   LEDRA  DATA  0E8H ; LEDs LEDR0 to LEDR7 (bit addressable, ex: LEDRA.1 for LEDR1)
0000            121   LEDRB  DATA  095H ; LEDs LEDR8 to LEDR15
0000            122   LEDRC  DATA  09EH ; LEDs LEDR16, LEDR15, and LEDG8
0000            123   LEDG   DATA  0F8H ; LEDs LEDG0 to LEDG7 (bit addressable, ex: LEDG.3 for LEDG3)
0000            124   SWA    DATA  0E8H ; Switches SW0 to SW7 (bit addressable, ex: SWA.1 for SW1)
0000            125   SWB    DATA  095H ; Switches SW8 to SW15
0000            126   SWC    DATA  09EH ; Switches SW16 and SW17
0000            127   KEY    DATA  0F8H ; KEY1=KEY.1, KEY2=KEY.2, KEY3=KEY.3.  KEY0 is the reset button! 
0000            128   
0000            129   LCD_CMD   DATA 0D8H ;
0000            130   LCD_DATA  DATA 0D9H ;
0000            131   LCD_MOD   DATA 0DAH ; Write 0xff to make LCD_DATA an output
0000            132   LCD_RW    BIT  0D8H ; '0' writes to LCD
0000            133   LCD_EN    BIT  0D9H ; Toggle from '1' to '0'
0000            134   LCD_RS    BIT  0DAH ; '0' for commands, '1' for data
0000            135   LCD_ON    BIT  0DBH ; Write '1' to power the LCD
0000            136   LCD_BLON  BIT  0DCH ; Write '1' to turn on back light
0000            137   
0000            138   FLASH_CMD  data 0DBH ; The control bits of the flash memory:
0000            139   ; bit 0: FL_RST_N  Set to 1 for normal operation
0000            140   ; bit 1: FL_WE_N
0000            141   ; bit 2: FL_OE_N
0000            142   ; bit 3: FL_CE_N
0000            143   FLASH_DATA data 0DCH ; 8-bit data bus of flash memory.
0000            144   FLASH_MOD  data 0DDH ; 0xff makes FLASH_DATA output.  0x00 makes FLASH_DATA input.
0000            145   FLASH_ADD0 data 0E1H ; address bits 0 to 7.
0000            146   FLASH_ADD1 data 0E2H ; address bits 8 to 15.
0000            147   FLASH_ADD2 data 0E3H ; address bits 16 to 21.
0000            148   
0000              2   
0000              3   org 0000H
0000 0203F3       4       ljmp init
0003              5   
0003              6   ; variables to calcualte timing reload
0003              7   XTAL equ 33333333 ; variables to calcualte timing reload
0003              8   FREQ equ 100
0003              9   RELOAD_TIMER_10ms equ 65536 - (XTAL/(12*FREQ))
0003             10   
0003             11   ; variables to store time and date
0030             12   dseg at 30h
0030             13   time:       ds 3 ; stored in BCD, LSD to MSD: seconds, minutes, hours
0033             14   date:       ds 3 ; stored in BCD, LSD to MSD: day, month, year 
0036             15   num_days:   ds 1 ; number of days in the current month
0037             16   
0037             17   ; flags for various uses
0000             18   bseg
0000             19   twelve:         dbit 1 ; when set, displays time in 12-hour format
0001             20   disp_sec:       dbit 1 ; when set, doesn't display seconds - blanks HEX0 and HEX1 if in 24-hour mode, shows AM/PM if in 12-hour mode
0002             21   disp_date:      dbit 1 ; when set, displays the date instead of the time in the form MM/DD/YY
0003             22   blank:          dbit 1 ; when set, blanks the hex displays
0004             23   enter_set:      dbit 1 ; flag used to enter the set mode
0005             24   flash_flag:     dbit 1 ; flag used to flash the hex displays when setting the time/date
0006             25   dec_flag:       dbit 1 ; flag used to decrement the digit when setting the time/date
0007             26   
0007             27   ; Look-up table for 7-seg displays
0003             28   cseg
0003             29   myLUT: 
0003 C0F9A4B0    30       DB 0C0H, 0F9H, 0A4H, 0B0H, 099H        ; 0 TO 4
     99
0008 9282F880    31       DB 092H, 082H, 0F8H, 080H, 090H        ; 4 TO 9
     90
000D             32   
000D             33   ; subroutine that uses timer 0 to wait 10ms
000D             34   wait10ms:
000D C28C        35       clr TR0
000F 758C93      36       mov TH0, #high(RELOAD_TIMER_10ms)
0012 758A7F      37       mov TL0, #low(RELOAD_TIMER_10ms)
0015 C28D        38       clr TF0
0017 D28C        39       setb TR0
0019             40   ; wait10ms_L0:
0019             41   ;     jnb TF0, wait10ms_L0
0019 308DFD      42       jnb TF0, $
001C 22          43       ret
001D             44   
                 45   showBCD MAC
                 46   	; Display LSD
                 47       mov a, %0
                 48       anl a, #0FH
                 49       movc a, @a+dptr ; move to the accumulator the value of the look-up table plus the number
                 50       mov %1, a
                 51   	; Display MSD
                 52       mov a, %0
                 53       swap a
                 54       anl a, #0FH
                 55       movc a, @a+dptr
                 56       mov %2, a
                 57   ENDMAC
001D             58   
001D             59   display:
001D 900003      60            mov dptr, #myLUT
0020 20033E      61       jb blank, display_blank
0023 20024E      62       jb disp_date, display_date    
0026 200079      63       jb twelve, display_twelve
0029             64            ; Display LSD
0029 E532        64       mov a, time+2
002B 540F        64       anl a, #0FH
002D 93          64       movc a, @a+dptr ; move to the accumulator the value of the look-up table plus the number
002E F58E        64       mov HEX4, a
0030             64            ; Display MSD
0030 E532        64       mov a, time+2
0032 C4          64       swap a
0033 540F        64       anl a, #0FH
0035 93          64       movc a, @a+dptr
0036 F58F        64       mov HEX5, a
0038             65            ; Display LSD
0038 E531        65       mov a, time+1
003A 540F        65       anl a, #0FH
003C 93          65       movc a, @a+dptr ; move to the accumulator the value of the look-up table plus the number
003D F593        65       mov HEX2, a
003F             65            ; Display MSD
003F E531        65       mov a, time+1
0041 C4          65       swap a
0042 540F        65       anl a, #0FH
0044 93          65       movc a, @a+dptr
0045 F594        65       mov HEX3, a
0047 200110      66       jb disp_sec, display_no_sec
004A             67            ; Display LSD
004A E530        67       mov a, time+0
004C 540F        67       anl a, #0FH
004E 93          67       movc a, @a+dptr ; move to the accumulator the value of the look-up table plus the number
004F F591        67       mov HEX0, a
0051             67            ; Display MSD
0051 E530        67       mov a, time+0
0053 C4          67       swap a
0054 540F        67       anl a, #0FH
0056 93          67       movc a, @a+dptr
0057 F592        67       mov HEX1, a
0059 22          68       ret
005A             69   
005A             70   display_no_sec:
005A 7591FF      71       mov HEX0, #0FFH
005D 7592FF      72       mov HEX1, #0FFH
0060 22          73       ret
0061             74   
0061             75   display_blank:
0061 7591FF      76       mov HEX0, #0FFH
0064 7592FF      77       mov HEX1, #0FFH
0067 7593FF      78       mov HEX2, #0FFH
006A 7594FF      79       mov HEX3, #0FFH
006D 758EFF      80       mov HEX4, #0FFH
0070 758FFF      81       mov HEX5, #0FFH
0073 22          82       ret
0074             83   
0074             84   display_date:
0074             85            ; Display LSD
0074 E535        85       mov a, date+2
0076 540F        85       anl a, #0FH
0078 93          85       movc a, @a+dptr ; move to the accumulator the value of the look-up table plus the number
0079 F591        85       mov HEX0, a
007B             85            ; Display MSD
007B E535        85       mov a, date+2
007D C4          85       swap a
007E 540F        85       anl a, #0FH
0080 93          85       movc a, @a+dptr
0081 F592        85       mov HEX1, a
0083             86            ; Display LSD
0083 E533        86       mov a, date+0
0085 540F        86       anl a, #0FH
0087 93          86       movc a, @a+dptr ; move to the accumulator the value of the look-up table plus the number
0088 F593        86       mov HEX2, a
008A             86            ; Display MSD
008A E533        86       mov a, date+0
008C C4          86       swap a
008D 540F        86       anl a, #0FH
008F 93          86       movc a, @a+dptr
0090 F594        86       mov HEX3, a
0092             87            ; Display LSD
0092 E534        87       mov a, date+1
0094 540F        87       anl a, #0FH
0096 93          87       movc a, @a+dptr ; move to the accumulator the value of the look-up table plus the number
0097 F58E        87       mov HEX4, a
0099             87            ; Display MSD
0099 E534        87       mov a, date+1
009B C4          87       swap a
009C 540F        87       anl a, #0FH
009E 93          87       movc a, @a+dptr
009F F58F        87       mov HEX5, a
00A1 22          88       ret
00A2             89   
00A2             90   display_twelve:
00A2             91            ; Display LSD
00A2 E531        91       mov a, time+1
00A4 540F        91       anl a, #0FH
00A6 93          91       movc a, @a+dptr ; move to the accumulator the value of the look-up table plus the number
00A7 F593        91       mov HEX2, a
00A9             91            ; Display MSD
00A9 E531        91       mov a, time+1
00AB C4          91       swap a
00AC 540F        91       anl a, #0FH
00AE 93          91       movc a, @a+dptr
00AF F594        91       mov HEX3, a ; show minutes
00B1 C3          92       clr c
00B2 E532        93       mov a, time+2
00B4 9412        94       subb a, #12H ; do hour - 12
00B6 402F        95       jc display_twelve_am ; if carry is set, hour < 12
00B8 B40011      96       cjne a, #0, display_twelve_pm ; if hour - 12 = 0, display 12
00BB             97            ; Display LSD
00BB 7412        97       mov a, #12H
00BD 540F        97       anl a, #0FH
00BF 93          97       movc a, @a+dptr ; move to the accumulator the value of the look-up table plus the number
00C0 F58E        97       mov HEX4, a
00C2             97            ; Display MSD
00C2 7412        97       mov a, #12H
00C4 C4          97       swap a
00C5 540F        97       anl a, #0FH
00C7 93          97       movc a, @a+dptr
00C8 F58F        97       mov HEX5, a
00CA 8042        98       sjmp display_twelve_sec
00CC             99   display_twelve_pm:
00CC FB         100       mov R3, a
00CD 540F       101       anl a, #0FH
00CF 940A       102       subb a, #0AH
00D1 4004       103       jc display_twelve_pm_continue
00D3 EB         104       mov a, R3
00D4 9406       105       subb a, #06H
00D6 FB         106       mov R3, a
00D7            107   display_twelve_pm_continue:
00D7            108            ; Display LSD
00D7 EB         108       mov a, R3
00D8 540F       108       anl a, #0FH
00DA 93         108       movc a, @a+dptr ; move to the accumulator the value of the look-up table plus the number
00DB F58E       108       mov HEX4, a
00DD            108            ; Display MSD
00DD EB         108       mov a, R3
00DE C4         108       swap a
00DF 540F       108       anl a, #0FH
00E1 93         108       movc a, @a+dptr
00E2 F58F       108       mov HEX5, a
00E4 C3         109       clr c
00E5 8027       110       sjmp display_twelve_sec
00E7            111   display_twelve_am:
00E7 E532       112       mov a, time+2
00E9 B40012     113       cjne a, #0, display_twelve_am_not_zero
00EC            114            ; Display LSD
00EC 7412       114       mov a, #12H
00EE 540F       114       anl a, #0FH
00F0 93         114       movc a, @a+dptr ; move to the accumulator the value of the look-up table plus the number
00F1 F58E       114       mov HEX4, a
00F3            114            ; Display MSD
00F3 7412       114       mov a, #12H
00F5 C4         114       swap a
00F6 540F       114       anl a, #0FH
00F8 93         114       movc a, @a+dptr
00F9 F58F       114       mov HEX5, a
00FB D3         115       setb c
00FC 8010       116       sjmp display_twelve_sec
00FE            117   display_twelve_am_not_zero:
00FE D3         118       setb c
00FF            119            ; Display LSD
00FF E532       119       mov a, time+2
0101 540F       119       anl a, #0FH
0103 93         119       movc a, @a+dptr ; move to the accumulator the value of the look-up table plus the number
0104 F58E       119       mov HEX4, a
0106            119            ; Display MSD
0106 E532       119       mov a, time+2
0108 C4         119       swap a
0109 540F       119       anl a, #0FH
010B 93         119       movc a, @a+dptr
010C F58F       119       mov HEX5, a
010E            120   display_twelve_sec:
010E 200110     121       jb disp_sec, display_twelve_ampm
0111            122            ; Display LSD
0111 E530       122       mov a, time+0
0113 540F       122       anl a, #0FH
0115 93         122       movc a, @a+dptr ; move to the accumulator the value of the look-up table plus the number
0116 F591       122       mov HEX0, a
0118            122            ; Display MSD
0118 E530       122       mov a, time+0
011A C4         122       swap a
011B 540F       122       anl a, #0FH
011D 93         122       movc a, @a+dptr
011E F592       122       mov HEX1, a
0120 22         123       ret
0121            124   display_twelve_ampm:
0121 7591C8     125       mov HEX0, #0C8H
0124 4004       126       jc display_twelve_show_am
0126 75928C     127       mov HEX1, #8CH
0129 22         128       ret
012A            129   display_twelve_show_am:
012A 759288     130       mov HEX1, #88H
012D 22         131       ret
012E            132   
012E            133   display_set:
012E B9006E     134       cjne R1, #0, flash_hex23
0131            135   flash_hex01:
0131 20E920     136       jb SWA.1, flash_hex01_L1
0134            137            ; Display LSD
0134 E531       137       mov a, time+1
0136 540F       137       anl a, #0FH
0138 93         137       movc a, @a+dptr ; move to the accumulator the value of the look-up table plus the number
0139 F593       137       mov HEX2, a
013B            137            ; Display MSD
013B E531       137       mov a, time+1
013D C4         137       swap a
013E 540F       137       anl a, #0FH
0140 93         137       movc a, @a+dptr
0141 F594       137       mov HEX3, a
0143            138            ; Display LSD
0143 E532       138       mov a, time+2
0145 540F       138       anl a, #0FH
0147 93         138       movc a, @a+dptr ; move to the accumulator the value of the look-up table plus the number
0148 F58E       138       mov HEX4, a
014A            138            ; Display MSD
014A E532       138       mov a, time+2
014C C4         138       swap a
014D 540F       138       anl a, #0FH
014F 93         138       movc a, @a+dptr
0150 F58F       138       mov HEX5, a
0152 801E       139       sjmp flash_hex01_L2
0154            140   flash_hex01_L1:
0154            141            ; Display LSD
0154 E533       141       mov a, date+0
0156 540F       141       anl a, #0FH
0158 93         141       movc a, @a+dptr ; move to the accumulator the value of the look-up table plus the number
0159 F593       141       mov HEX2, a
015B            141            ; Display MSD
015B E533       141       mov a, date+0
015D C4         141       swap a
015E 540F       141       anl a, #0FH
0160 93         141       movc a, @a+dptr
0161 F594       141       mov HEX3, a
0163            142            ; Display LSD
0163 E534       142       mov a, date+1
0165 540F       142       anl a, #0FH
0167 93         142       movc a, @a+dptr ; move to the accumulator the value of the look-up table plus the number
0168 F58E       142       mov HEX4, a
016A            142            ; Display MSD
016A E534       142       mov a, date+1
016C C4         142       swap a
016D 540F       142       anl a, #0FH
016F 93         142       movc a, @a+dptr
0170 F58F       142       mov HEX5, a
0172            143   flash_hex01_L2:
0172 200523     144       jb flash_flag, flash_hex01_off
0175 20E910     145       jb SWA.1, flash_hex01_L3
0178            146            ; Display LSD
0178 E530       146       mov a, time+0
017A 540F       146       anl a, #0FH
017C 93         146       movc a, @a+dptr ; move to the accumulator the value of the look-up table plus the number
017D F591       146       mov HEX0, a
017F            146            ; Display MSD
017F E530       146       mov a, time+0
0181 C4         146       swap a
0182 540F       146       anl a, #0FH
0184 93         146       movc a, @a+dptr
0185 F592       146       mov HEX1, a
0187 22         147       ret
0188            148   flash_hex01_L3:
0188            149            ; Display LSD
0188 E535       149       mov a, date+2
018A 540F       149       anl a, #0FH
018C 93         149       movc a, @a+dptr ; move to the accumulator the value of the look-up table plus the number
018D F591       149       mov HEX0, a
018F            149            ; Display MSD
018F E535       149       mov a, date+2
0191 C4         149       swap a
0192 540F       149       anl a, #0FH
0194 93         149       movc a, @a+dptr
0195 F592       149       mov HEX1, a
0197 22         150       ret
0198            151   flash_hex01_off:
0198 75917F     152       mov HEX0, #7FH
019B 75927F     153       mov HEX1, #7FH
019E 22         154       ret
019F            155   flash_hex23:
019F B9016E     156       cjne R1, #1, flash_hex45
01A2 20E920     157       jb SWA.1, flash_hex23_L1
01A5            158            ; Display LSD
01A5 E530       158       mov a, time+0
01A7 540F       158       anl a, #0FH
01A9 93         158       movc a, @a+dptr ; move to the accumulator the value of the look-up table plus the number
01AA F591       158       mov HEX0, a
01AC            158            ; Display MSD
01AC E530       158       mov a, time+0
01AE C4         158       swap a
01AF 540F       158       anl a, #0FH
01B1 93         158       movc a, @a+dptr
01B2 F592       158       mov HEX1, a
01B4            159            ; Display LSD
01B4 E532       159       mov a, time+2
01B6 540F       159       anl a, #0FH
01B8 93         159       movc a, @a+dptr ; move to the accumulator the value of the look-up table plus the number
01B9 F58E       159       mov HEX4, a
01BB            159            ; Display MSD
01BB E532       159       mov a, time+2
01BD C4         159       swap a
01BE 540F       159       anl a, #0FH
01C0 93         159       movc a, @a+dptr
01C1 F58F       159       mov HEX5, a
01C3 801E       160       sjmp flash_hex23_L2
01C5            161   flash_hex23_L1:
01C5            162            ; Display LSD
01C5 E535       162       mov a, date+2
01C7 540F       162       anl a, #0FH
01C9 93         162       movc a, @a+dptr ; move to the accumulator the value of the look-up table plus the number
01CA F591       162       mov HEX0, a
01CC            162            ; Display MSD
01CC E535       162       mov a, date+2
01CE C4         162       swap a
01CF 540F       162       anl a, #0FH
01D1 93         162       movc a, @a+dptr
01D2 F592       162       mov HEX1, a
01D4            163            ; Display LSD
01D4 E534       163       mov a, date+1
01D6 540F       163       anl a, #0FH
01D8 93         163       movc a, @a+dptr ; move to the accumulator the value of the look-up table plus the number
01D9 F58E       163       mov HEX4, a
01DB            163            ; Display MSD
01DB E534       163       mov a, date+1
01DD C4         163       swap a
01DE 540F       163       anl a, #0FH
01E0 93         163       movc a, @a+dptr
01E1 F58F       163       mov HEX5, a
01E3            164   flash_hex23_L2:
01E3 200523     165       jb flash_flag, flash_hex23_off
01E6 20E910     166       jb SWA.1, flash_hex23_L3
01E9            167            ; Display LSD
01E9 E531       167       mov a, time+1
01EB 540F       167       anl a, #0FH
01ED 93         167       movc a, @a+dptr ; move to the accumulator the value of the look-up table plus the number
01EE F593       167       mov HEX2, a
01F0            167            ; Display MSD
01F0 E531       167       mov a, time+1
01F2 C4         167       swap a
01F3 540F       167       anl a, #0FH
01F5 93         167       movc a, @a+dptr
01F6 F594       167       mov HEX3, a
01F8 22         168       ret
01F9            169   flash_hex23_L3:
01F9            170            ; Display LSD
01F9 E533       170       mov a, date+0
01FB 540F       170       anl a, #0FH
01FD 93         170       movc a, @a+dptr ; move to the accumulator the value of the look-up table plus the number
01FE F593       170       mov HEX2, a
0200            170            ; Display MSD
0200 E533       170       mov a, date+0
0202 C4         170       swap a
0203 540F       170       anl a, #0FH
0205 93         170       movc a, @a+dptr
0206 F594       170       mov HEX3, a
0208 22         171       ret
0209            172   flash_hex23_off:
0209 75937F     173       mov HEX2, #7FH
020C 75947F     174       mov HEX3, #7FH
020F 22         175       ret
0210            176   flash_hex45:
0210 20E920     177       jb SWA.1, flash_hex45_L1
0213            178            ; Display LSD
0213 E530       178       mov a, time+0
0215 540F       178       anl a, #0FH
0217 93         178       movc a, @a+dptr ; move to the accumulator the value of the look-up table plus the number
0218 F591       178       mov HEX0, a
021A            178            ; Display MSD
021A E530       178       mov a, time+0
021C C4         178       swap a
021D 540F       178       anl a, #0FH
021F 93         178       movc a, @a+dptr
0220 F592       178       mov HEX1, a
0222            179            ; Display LSD
0222 E531       179       mov a, time+1
0224 540F       179       anl a, #0FH
0226 93         179       movc a, @a+dptr ; move to the accumulator the value of the look-up table plus the number
0227 F593       179       mov HEX2, a
0229            179            ; Display MSD
0229 E531       179       mov a, time+1
022B C4         179       swap a
022C 540F       179       anl a, #0FH
022E 93         179       movc a, @a+dptr
022F F594       179       mov HEX3, a
0231 801E       180       sjmp flash_hex45_L2
0233            181   flash_hex45_L1:
0233            182            ; Display LSD
0233 E533       182       mov a, date+0
0235 540F       182       anl a, #0FH
0237 93         182       movc a, @a+dptr ; move to the accumulator the value of the look-up table plus the number
0238 F593       182       mov HEX2, a
023A            182            ; Display MSD
023A E533       182       mov a, date+0
023C C4         182       swap a
023D 540F       182       anl a, #0FH
023F 93         182       movc a, @a+dptr
0240 F594       182       mov HEX3, a
0242            183            ; Display LSD
0242 E535       183       mov a, date+2
0244 540F       183       anl a, #0FH
0246 93         183       movc a, @a+dptr ; move to the accumulator the value of the look-up table plus the number
0247 F591       183       mov HEX0, a
0249            183            ; Display MSD
0249 E535       183       mov a, date+2
024B C4         183       swap a
024C 540F       183       anl a, #0FH
024E 93         183       movc a, @a+dptr
024F F592       183       mov HEX1, a
0251            184   flash_hex45_L2:
0251 200523     185       jb flash_flag, flash_hex45_off
0254 20E910     186       jb SWA.1, flash_hex45_L3
0257            187            ; Display LSD
0257 E532       187       mov a, time+2
0259 540F       187       anl a, #0FH
025B 93         187       movc a, @a+dptr ; move to the accumulator the value of the look-up table plus the number
025C F58E       187       mov HEX4, a
025E            187            ; Display MSD
025E E532       187       mov a, time+2
0260 C4         187       swap a
0261 540F       187       anl a, #0FH
0263 93         187       movc a, @a+dptr
0264 F58F       187       mov HEX5, a
0266 22         188       ret
0267            189   flash_hex45_L3:
0267            190            ; Display LSD
0267 E534       190       mov a, date+1
0269 540F       190       anl a, #0FH
026B 93         190       movc a, @a+dptr ; move to the accumulator the value of the look-up table plus the number
026C F58E       190       mov HEX4, a
026E            190            ; Display MSD
026E E534       190       mov a, date+1
0270 C4         190       swap a
0271 540F       190       anl a, #0FH
0273 93         190       movc a, @a+dptr
0274 F58F       190       mov HEX5, a
0276 22         191       ret
0277            192   flash_hex45_off:
0277 758E7F     193       mov HEX4, #7FH
027A 758F7F     194       mov HEX5, #7FH
027D 22         195       ret
027E            196   
027E            197   incTime:
027E E530       198       mov a, time+0
0280 2401       199       add a, #1
0282 D4         200       da a
0283 B4601D     201       cjne a, #60H, incTime_ret1 ; compare to 60 in BCD
0286 E4         202       clr a
0287 F530       203       mov time+0, a
0289 E531       204       mov a, time+1
028B 2401       205       add a, #1
028D D4         206       da a
028E B46015     207       cjne a, #60H, incTime_ret2 ; compare to 60 in BCD
0291 E4         208       clr a
0292 F531       209       mov time+1, a
0294 E532       210       mov a, time+2
0296 2401       211       add a, #1
0298 D4         212       da a
0299 B4240D     213       cjne a, #24H, incTime_ret3 ; compare to 24 in BCD
029C 1202E8     214       lcall incDate
029F E4         215       clr a
02A0 F532       216       mov time+2, a
02A2 22         217       ret
02A3            218   incTime_ret1:  
02A3 F530       219       mov time+0, a
02A5 22         220       ret
02A6            221   incTime_ret2:
02A6 F531       222       mov time+1, a
02A8 22         223       ret
02A9            224   incTime_ret3:
02A9 F532       225       mov time+2, a
02AB 22         226       ret
02AC            227   
02AC            228   set_num_days:
02AC E534       229       mov a, date+1
02AE B40213     230       cjne a, #02H, set_num_days_not_feb
02B1 E535       231       mov a, date+2
02B3 75F004     232       mov b, #4
02B6 84         233       div ab ; remainder in b, leap year if b=0
02B7 E5F0       234       mov a, b
02B9 B40004     235       cjne a, #0, set_num_days_no_leap
02BC 753630     236       mov num_days, #30H ; 29 days, compare to 30 for leap year feb
02BF 22         237       ret
02C0            238   set_num_days_no_leap:
02C0 753629     239       mov num_days, #29H ; 28 days, compare to 29
02C3 22         240       ret
02C4            241   set_num_days_not_feb:
02C4 5410       242       anl a, #10H
02C6 B41009     243       cjne a, #10H, set_num_days_month_under_10
02C9 E534       244       mov a, date+1
02CB 5401       245       anl a, #1
02CD B4000B     246       cjne a, #0, set_num_days_30
02D0 800D       247       sjmp set_num_days_31
02D2            248   set_num_days_month_under_10:
02D2 E534       249       mov a, date+1
02D4 5409       250       anl a, #1001B
02D6 B40006     251       cjne a, #0, set_num_days_31
02D9 8000       252       sjmp set_num_days_30
02DB            253   set_num_days_30:
02DB 753631     254       mov num_days, #31H ; 30 days, compare to 31
02DE 22         255       ret
02DF            256   set_num_days_31:
02DF B40902     257       cjne a, #1001B, set_num_days_31_continue ; September edge case
02E2 80F7       258       sjmp set_num_days_30
02E4            259   set_num_days_31_continue:
02E4 753632     260       mov num_days, #32H ; 31 days, compare to 32
02E7 22         261       ret
02E8            262   
02E8            263   incDate:
02E8 E533       264       mov a, date+0
02EA 2401       265       add a, #1
02EC D4         266       da a
02ED B53619     267       cjne a, num_days, incDate_ret1
02F0 753301     268       mov date+0, #1
02F3 E534       269       mov a, date+1
02F5 2401       270       add a, #1
02F7 D4         271       da a
02F8 B41311     272       cjne a, #13H, incDate_ret2
02FB 753401     273       mov date+1, #1
02FE E535       274       mov a, date+2
0300 2401       275       add a, #1
0302 D4         276       da a
0303 B4A00C     277       cjne a, #0A0H, incDate_ret3 ; A0H = 100 in BCD
0306 E4         278       clr a
0307 8009       279       sjmp incDate_ret3
0309            280   incDate_ret1:
0309 F533       281       mov date+0, a
030B 22         282       ret
030C            283   incDate_ret2:
030C F534       284       mov date+1, a
030E 1202AC     285       lcall set_num_days
0311 22         286       ret
0312            287   incDate_ret3:
0312 F535       288       mov date+2, a
0314 22         289       ret
0315            290   
0315            291   check_days:
0315 1202AC     292       lcall set_num_days
0318 E536       293       mov a, num_days
031A C3         294       clr c
031B 9533       295       subb a, date+0
031D 4003       296       jc check_days_adjust
031F B4000F     297       cjne a, #0, check_days_ret
0322            298   check_days_adjust:
0322 E536       299       mov a, num_days
0324 B43004     300       cjne a, #30H, check_days_adjust_L1
0327 753329     301       mov date+0, #29H
032A 22         302       ret
032B            303   check_days_adjust_L1:
032B C3         304       clr c
032C 9401       305       subb a, #1
032E F533       306       mov date+0, a
0330 22         307       ret
0331            308   check_days_ret:
0331 22         309       ret
0332            310   
0332            311   adjust_digit:
0332 B9000F     312       cjne R1, #0, adjust_min
0335 20E906     313       jb SWA.1, adjust_year
0338 AA30       314       mov R2, time+0
033A 7830       315       mov R0, #time+0
033C 8027       316       sjmp adjust
033E            317   adjust_year:
033E AA35       318       mov R2, date+2
0340 7835       319       mov R0, #date+2
0342 8021       320       sjmp adjust
0344            321   adjust_min:
0344 B9010F     322       cjne R1, #1, adjust_hour
0347 20E906     323       jb SWA.1, adjust_date
034A AA31       324       mov R2, time+1
034C 7831       325       mov R0, #time+1
034E 8015       326       sjmp adjust
0350            327   adjust_date:
0350 AA33       328       mov R2, date+0
0352 7833       329       mov R0, #date+0
0354 800F       330       sjmp adjust
0356            331   adjust_hour:
0356 20E906     332       jb SWA.1, adjust_month
0359 AA32       333       mov R2, time+2
035B 7832       334       mov R0, #time+2
035D 8006       335       sjmp adjust
035F            336   adjust_month:
035F AA34       337       mov R2, date+1
0361 7834       338       mov R0, #date+1
0363 8000       339       sjmp adjust
0365            340   adjust:
0365 EA         341       mov a, R2
0366 20062F     342       jb dec_flag, decrement
0369            343   increment:
0369 2401       344       add a, #1
036B D4         345       da a
036C 20E90F     346       jb SWA.1, inc_date_month
036F B90206     347       cjne R1, #2, inc_sec_min
0372 B42469     348       cjne a, #24H, adjust_ret
0375 E4         349       clr a
0376 8066       350       sjmp adjust_ret
0378            351   inc_sec_min:
0378 B46063     352       cjne a, #60H, adjust_ret
037B E4         353       clr a
037C 8060       354       sjmp adjust_ret
037E            355   inc_date_month:
037E B90207     356       cjne R1, #2, inc_date_day
0381 B4135A     357       cjne a, #13H, adjust_ret
0384 7401       358       mov a, #1
0386 8056       359       sjmp adjust_ret
0388            360   inc_date_day:
0388 B90107     361       cjne R1, #1, inc_date_year
038B B53650     362       cjne a, num_days, adjust_ret
038E 7401       363       mov a, #1
0390 804C       364       sjmp adjust_ret
0392            365   inc_date_year:
0392 B4A049     366       cjne a, #0A0H, adjust_ret
0395 E4         367       clr a
0396 8046       368       sjmp adjust_ret
0398            369   decrement:
0398 20E90E     370       jb SWA.1, dec_date_month
039B B40030     371       cjne a, #0, dec_L1
039E B90204     372       cjne R1, #2, dec_sec_min
03A1 7423       373       mov a, #23H
03A3 8039       374       sjmp adjust_ret
03A5            375   dec_sec_min:
03A5 7459       376       mov a, #59H
03A7 8035       377       sjmp adjust_ret
03A9            378   dec_date_month:
03A9 B90207     379       cjne R1, #2, dec_date_day
03AC B4011F     380       cjne a, #1, dec_L1
03AF 7412       381       mov a, #12H
03B1 802B       382       sjmp adjust_ret
03B3            383   dec_date_day:
03B3 B90111     384       cjne R1, #1, dec_date_year
03B6 B40115     385       cjne a, #1, dec_L1
03B9 E536       386       mov a, num_days
03BB B43004     387       cjne a, #30H, dec_date_day_L1
03BE 7429       388       mov a, #29H
03C0 801C       389       sjmp adjust_ret
03C2            390   dec_date_day_L1:
03C2 C3         391       clr c
03C3 9401       392       subb a, #1
03C5 8017       393       sjmp adjust_ret
03C7            394   dec_date_year:
03C7 B40004     395       cjne a, #0, dec_L1
03CA 7499       396       mov a, #99H
03CC 8010       397       sjmp adjust_ret
03CE            398   dec_L1:
03CE 540F       399       anl a, #0FH
03D0 B40007     400       cjne a, #0, dec_L2
03D3 EA         401       mov a, R2
03D4 24F0       402       add a, #0F0H
03D6 4409       403       orl a, #09H
03D8 8004       404       sjmp adjust_ret
03DA            405   dec_L2:
03DA EA         406       mov a, R2
03DB C3         407       clr c
03DC 9401       408       subb a, #1
03DE            409   adjust_ret:
03DE F6         410       mov @R0, a
03DF C205       411       clr flash_flag
03E1 7800       412       mov R0, #0
03E3 120315     413       lcall check_days
03E6 22         414       ret
03E7            415   
03E7            416   check_enter_set:
03E7 20E806     417       jb SWA.0, enter_set_mode
03EA 20E903     418       jb SWA.1, enter_set_mode
03ED C204       419       clr enter_set
03EF 22         420       ret
03F0            421   enter_set_mode:
03F0 D204       422       setb enter_set
03F2 22         423       ret
03F3            424   
03F3            425   init:
03F3 75817F     426       mov sp, #07FH ; set stack pointer
03F6 758901     427       mov TMOD, #00000001B ; set timer 0 mode 1
03F9 E4         428       clr a
03FA F5E8       429            mov LEDRA, a ; clear LEDs
03FC F595       430            mov LEDRB, a
03FE F8         431       mov R0, a ; register 0 used to count 10ms delays
03FF F9         432       mov R1, a ; register 1 bits used for <fill in later>
0400 F530       433       mov time+0, a ; clear the time variable
0402 F531       434       mov time+1, a
0404 F532       435       mov time+2, a
0406 753301     436       mov date+0, #01H
0409 753401     437       mov date+1, #01H
040C 753500     438       mov date+2, #00H
040F 1202AC     439       lcall set_num_days
0412 C203       440       clr blank
0414 C200       441       clr twelve
0416 C201       442       clr disp_sec
0418 8000       443       sjmp main
041A            444   
041A            445   main:
041A 12000D     446       lcall wait10ms
041D            447   check_set:
041D 1203E7     448       lcall check_enter_set
0420 200439     449       jb enter_set, set_mode
0423            450   check_twelve:
0423 20FB05     451       jb KEY.3, check_disp_sec
0426 30FBFD     452       jnb KEY.3, $
0429 B200       453       cpl twelve
042B            454   check_disp_sec:
042B 20FA05     455       jb KEY.2, check_disp_date
042E 30FAFD     456       jnb KEY.2, $
0431 B201       457       cpl disp_sec
0433            458   check_disp_date:
0433 20F907     459       jb KEY.1, check_blank
0436 30F9FD     460       jnb KEY.1, $
0439 D202       461       setb disp_date
043B 7C00       462       mov R4, #0
043D            463   check_blank:
043D 20F805     464       jb KEY.0, main_continue
0440 30F8FD     465       jnb KEY.0, $
0443 B203       466       cpl blank
0445            467   main_continue:
0445 12001D     468       lcall display
0448 08         469       inc R0
0449 300206     470       jnb disp_date, main_date_continue
044C 0C         471       inc R4
044D BCC802     472       cjne R4, #200, main_date_continue ; display date for 2 seconds
0450 C202       473       clr disp_date
0452            474   main_date_continue:
0452 B863C5     475       cjne R0, #99, main ; 99 cyles of waiting 10ms, allot 10ms to account for time for code to executue 
0455 12027E     476       lcall incTime
0458 7800       477       mov R0, #0
045A 80BE       478       sjmp main
045C            479   
045C            480   set_mode:
045C 7800       481       mov R0, #0
045E 7900       482       mov R1, #0
0460 C202       483       clr disp_date
0462 D205       484       setb flash_flag
0464            485   set_mode_loop:
0464 12000D     486       lcall wait10ms
0467            487   check_left:
0467 20FB09     488       jb KEY.3, check_right
046A 30FBFD     489       jnb KEY.3, $
046D 09         490       inc R1
046E B90302     491       cjne R1, #3, check_right
0471 7900       492       mov R1, #0
0473            493   check_right:
0473 20F809     494       jb KEY.0, check_inc
0476 30F8FD     495       jnb KEY.0, $
0479 19         496       dec R1
047A B9FF02     497       cjne R1, #0FFH, check_inc
047D 7902       498       mov R1, #2
047F            499   check_inc:
047F 20FA0B     500       jb KEY.2, check_dec
0482 30FAFD     501       jnb KEY.2, $
0485 C206       502       clr dec_flag
0487 120332     503       lcall adjust_digit
048A 1202AC     504       lcall set_num_days
048D            505   check_dec:
048D 20F90B     506       jb KEY.1, set_mode_continue
0490 30F9FD     507       jnb KEY.1, $
0493 D206       508       setb dec_flag
0495 120332     509       lcall adjust_digit
0498 1202AC     510       lcall set_num_days
049B            511   set_mode_continue:
049B 12012E     512       lcall display_set
049E 08         513       inc R0
049F 1203E7     514       lcall check_enter_set
04A2 300409     515       jnb enter_set, set_mode_exit
04A5 B828BC     516       cjne R0, #40, set_mode_loop
04A8 B205       517       cpl flash_flag
04AA 7800       518       mov R0, #0
04AC 80B6       519       sjmp set_mode_loop
04AE            520   set_mode_exit:
04AE 02041A     521       ljmp main
04B1            522   EN
